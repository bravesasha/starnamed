# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Query API
    description: Query provides defines the gRPC querier service
    version: 0.0.1
paths:
    /cosmwasm/wasm/v1/code:
        get:
            tags:
                - Query
            description: Codes gets the metadata for all stored wasm codes
            operationId: Query_Codes
            parameters:
                - name: pagination.key
                  in: query
                  description: key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.
                  schema:
                    type: string
                    format: bytes
                - name: pagination.offset
                  in: query
                  description: offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.limit
                  in: query
                  description: limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.countTotal
                  in: query
                  description: count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryCodesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/code/{codeId}:
        get:
            tags:
                - Query
            description: Code gets the binary code and metadata for a singe wasm code
            operationId: Query_Code
            parameters:
                - name: codeId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/code/{codeId}/contracts:
        get:
            tags:
                - Query
            description: ContractsByCode lists all smart contracts for a code id
            operationId: Query_ContractsByCode
            parameters:
                - name: codeId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.key
                  in: query
                  description: key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.
                  schema:
                    type: string
                    format: bytes
                - name: pagination.offset
                  in: query
                  description: offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.limit
                  in: query
                  description: limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.countTotal
                  in: query
                  description: count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryContractsByCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/codes/params:
        get:
            tags:
                - Query
            description: Params gets the module params
            operationId: Query_Params
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryParamsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/codes/pinned:
        get:
            tags:
                - Query
            description: PinnedCodes gets the pinned code ids
            operationId: Query_PinnedCodes
            parameters:
                - name: pagination.key
                  in: query
                  description: key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.
                  schema:
                    type: string
                    format: bytes
                - name: pagination.offset
                  in: query
                  description: offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.limit
                  in: query
                  description: limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.countTotal
                  in: query
                  description: count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryPinnedCodesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/contract/{address}:
        get:
            tags:
                - Query
            description: ContractInfo gets the contract meta data
            operationId: Query_ContractInfo
            parameters:
                - name: address
                  in: path
                  description: address is the address of the contract to query
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryContractInfoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/contract/{address}/history:
        get:
            tags:
                - Query
            description: ContractHistory gets the contract code history
            operationId: Query_ContractHistory
            parameters:
                - name: address
                  in: path
                  description: address is the address of the contract to query
                  required: true
                  schema:
                    type: string
                - name: pagination.key
                  in: query
                  description: key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.
                  schema:
                    type: string
                    format: bytes
                - name: pagination.offset
                  in: query
                  description: offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.limit
                  in: query
                  description: limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.countTotal
                  in: query
                  description: count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryContractHistoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/contract/{address}/raw/{queryData}:
        get:
            tags:
                - Query
            description: RawContractState gets single key from the raw store data of a contract
            operationId: Query_RawContractState
            parameters:
                - name: address
                  in: path
                  description: address is the address of the contract
                  required: true
                  schema:
                    type: string
                - name: queryData
                  in: path
                  required: true
                  schema:
                    type: string
                    format: bytes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryRawContractStateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/contract/{address}/smart/{queryData}:
        get:
            tags:
                - Query
            description: SmartContractState get smart query result from the contract
            operationId: Query_SmartContractState
            parameters:
                - name: address
                  in: path
                  description: address is the address of the contract
                  required: true
                  schema:
                    type: string
                - name: queryData
                  in: path
                  description: QueryData contains the query data passed to the contract
                  required: true
                  schema:
                    type: string
                    format: bytes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QuerySmartContractStateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /cosmwasm/wasm/v1/contract/{address}/state:
        get:
            tags:
                - Query
            description: AllContractState gets all raw store data for a single contract
            operationId: Query_AllContractState
            parameters:
                - name: address
                  in: path
                  description: address is the address of the contract
                  required: true
                  schema:
                    type: string
                - name: pagination.key
                  in: query
                  description: key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.
                  schema:
                    type: string
                    format: bytes
                - name: pagination.offset
                  in: query
                  description: offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.limit
                  in: query
                  description: limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
                  schema:
                    type: integer
                    format: uint64
                - name: pagination.countTotal
                  in: query
                  description: count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryAllContractStateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AbsoluteTxPosition:
            type: object
            properties:
                blockHeight:
                    type: integer
                    description: BlockHeight is the block the contract was created at
                    format: uint64
                txIndex:
                    type: integer
                    description: TxIndex is a monotonic counter within the block (actual transaction index, or gas consumed)
                    format: uint64
            description: AbsoluteTxPosition is a unique transaction position that allows for global ordering of transactions.
        AccessConfig:
            type: object
            properties:
                permission:
                    type: integer
                    format: enum
                address:
                    type: string
                    description: 'Address Deprecated: replaced by addresses'
                addresses:
                    type: array
                    items:
                        type: string
            description: AccessConfig access control type.
        CodeInfoResponse:
            type: object
            properties:
                codeId:
                    type: integer
                    format: uint64
                creator:
                    type: string
                dataHash:
                    type: string
                    format: bytes
                instantiatePermission:
                    $ref: '#/components/schemas/AccessConfig'
            description: CodeInfoResponse contains code meta data from CodeInfo
        ContractCodeHistoryEntry:
            type: object
            properties:
                operation:
                    type: integer
                    format: enum
                codeId:
                    type: integer
                    description: CodeID is the reference to the stored WASM code
                    format: uint64
                updated:
                    $ref: '#/components/schemas/AbsoluteTxPosition'
                msg:
                    type: string
                    format: bytes
            description: ContractCodeHistoryEntry metadata to a contract.
        ContractInfo:
            type: object
            properties:
                codeId:
                    type: integer
                    description: CodeID is the reference to the stored Wasm code
                    format: uint64
                creator:
                    type: string
                    description: Creator address who initially instantiated the contract
                admin:
                    type: string
                    description: Admin is an optional address that can execute migrations
                label:
                    type: string
                    description: Label is optional metadata to be stored with a contract instance.
                created:
                    $ref: '#/components/schemas/AbsoluteTxPosition'
                ibcPortId:
                    type: string
                extension:
                    $ref: '#/components/schemas/GoogleProtobufAny'
            description: ContractInfo stores a WASM contract instance
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Model:
            type: object
            properties:
                key:
                    type: string
                    description: hex-encode key to read it better (this is often ascii)
                    format: bytes
                value:
                    type: string
                    description: base64-encode raw value
                    format: bytes
            description: Model is a struct that holds a KV pair
        PageResponse:
            type: object
            properties:
                nextKey:
                    type: string
                    description: next_key is the key to be passed to PageRequest.key to query the next page most efficiently
                    format: bytes
                total:
                    type: integer
                    description: total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise
                    format: uint64
            description: PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }
        Params:
            type: object
            properties:
                codeUploadAccess:
                    $ref: '#/components/schemas/AccessConfig'
                instantiateDefaultPermission:
                    type: integer
                    format: enum
            description: Params defines the set of wasm parameters.
        QueryAllContractStateResponse:
            type: object
            properties:
                models:
                    type: array
                    items:
                        $ref: '#/components/schemas/Model'
                pagination:
                    $ref: '#/components/schemas/PageResponse'
            description: QueryAllContractStateResponse is the response type for the Query/AllContractState RPC method
        QueryCodeResponse:
            type: object
            properties:
                codeInfo:
                    $ref: '#/components/schemas/CodeInfoResponse'
                data:
                    type: string
                    format: bytes
            description: QueryCodeResponse is the response type for the Query/Code RPC method
        QueryCodesResponse:
            type: object
            properties:
                codeInfos:
                    type: array
                    items:
                        $ref: '#/components/schemas/CodeInfoResponse'
                pagination:
                    $ref: '#/components/schemas/PageResponse'
            description: QueryCodesResponse is the response type for the Query/Codes RPC method
        QueryContractHistoryResponse:
            type: object
            properties:
                entries:
                    type: array
                    items:
                        $ref: '#/components/schemas/ContractCodeHistoryEntry'
                pagination:
                    $ref: '#/components/schemas/PageResponse'
            description: QueryContractHistoryResponse is the response type for the Query/ContractHistory RPC method
        QueryContractInfoResponse:
            type: object
            properties:
                address:
                    type: string
                    description: address is the address of the contract
                contractInfo:
                    $ref: '#/components/schemas/ContractInfo'
            description: QueryContractInfoResponse is the response type for the Query/ContractInfo RPC method
        QueryContractsByCodeResponse:
            type: object
            properties:
                contracts:
                    type: array
                    items:
                        type: string
                    description: contracts are a set of contract addresses
                pagination:
                    $ref: '#/components/schemas/PageResponse'
            description: QueryContractsByCodeResponse is the response type for the Query/ContractsByCode RPC method
        QueryParamsResponse:
            type: object
            properties:
                params:
                    $ref: '#/components/schemas/Params'
            description: QueryParamsResponse is the response type for the Query/Params RPC method.
        QueryPinnedCodesResponse:
            type: object
            properties:
                codeIds:
                    type: array
                    items:
                        type: integer
                        format: uint64
                pagination:
                    $ref: '#/components/schemas/PageResponse'
            description: QueryPinnedCodesResponse is the response type for the Query/PinnedCodes RPC method
        QueryRawContractStateResponse:
            type: object
            properties:
                data:
                    type: string
                    description: Data contains the raw store data
                    format: bytes
            description: QueryRawContractStateResponse is the response type for the Query/RawContractState RPC method
        QuerySmartContractStateResponse:
            type: object
            properties:
                data:
                    type: string
                    description: Data contains the json data returned from the smart contract
                    format: bytes
            description: QuerySmartContractStateResponse is the response type for the Query/SmartContractState RPC method
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: Query
